using AlsTools.Core.Enums;
using AlsTools.Core.ValueObjects;
using AlsTools.Core.ValueObjects.Tracks;

namespace AlsTools.Core.Entities;

public class LiveProject
{
    public LiveProject()
    {
        Tracks = new List<ITrack>();
        Scenes = new List<Scene>();
        Locators = new List<Locator>();
    }

    /// <summary>
    /// Internal (persistency related) project ID.
    /// This must be nullable and null at the moment of the bulk insert for an
    /// ID to be auto generated by the DB engine.
    /// <see href="https://stackoverflow.com/a/52519620">BulkInsert error with RavenDB: Document id must have a non empty value</see>
    /// </summary>
    public string? Id { get; set; }

    /// <summary>
    /// The project name
    /// </summary>
    public string Name { get; set; } = string.Empty;

    /// <summary>
    /// The full path of this project
    /// </summary>
    public string Path { get; set; } = string.Empty;

    /// <summary>
    /// Creator ("Live version")
    /// </summary>
    public string Creator { get; set; } = string.Empty;

    /// <summary>
    /// Minor version
    /// </summary>
    public string MinorVersion { get; set; } = string.Empty;

    /// <summary>
    /// Major version
    /// </summary>
    public string MajorVersion { get; set; } = string.Empty;

    /// <summary>
    /// The project type (Set or Clip)
    /// </summary>
    public ProjectType ProjectType { get; set; }

    /// <summary>
    /// Schema change count
    /// </summary>
    public int? SchemaChangeCount { get; set; }

    /// <summary>
    /// The project tempo/BPM.
    /// </summary>
    public double? Tempo { get; set; }

    /// <summary>
    /// The project time signature. It is probably a bit mask.
    /// </summary>
    public int? TimeSignature { get; set; }

    /// <summary>
    /// The project global groove amount
    /// </summary>
    public double? GlobalGrooveAmount { get; set; }

    /// <summary>
    /// The tracks this project contains
    /// </summary>
    public IReadOnlyList<ITrack> Tracks { get; set; }

    /// <summary>
    /// The scenes this project contains
    /// </summary>
    public IReadOnlyList<Scene> Scenes { get; set; }

    /// <summary>
    /// The locators this project contains
    /// </summary>
    public IReadOnlyList<Locator> Locators { get; set; }

    /// <summary>
    /// The creation time of the project file
    /// </summary>
    public DateTime CreationTime { get; set; }

    /// <summary>
    /// The last modification time of the project file
    /// </summary>
    public DateTime LastModified { get; set; }
}